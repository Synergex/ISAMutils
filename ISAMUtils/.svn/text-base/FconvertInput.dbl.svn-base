;; ***************************************************************************
;;
;;  Title:      FconvertInput.dbl
;;
;;  Type:       UserControl
;;
;;  Description: UserControl to be inserted into F-CONVERT -> Input tab
;;              
;;  Author:     Steven Lane, Synergy/DE Developer Support
;;
;;  Copyright:  ©Synergex International Inc.  All rights reserved.
;;
;;  WARNING:    If you were given this code by a Synergex employee then you may
;;              use and modify it freely to generate code for your applications.
;;              However, you may not under any circumstances distribute this
;;              code, or any modified version of this code, to any third party
;;              without first obtaining written permission to do so from
;;              Synergex.  In using this code you accept that it is provided
;;              as is, and without support or warranty.  Neither Synergex or the
;;              author accept any responsibility for any losses or damages of
;;              any nature which may arise from the use of this code.  This
;;              header information must remain, unaltered in the code at all
;;              times.  Possession of this code, or any modified version of this
;;              code, indicates your acceptance of these terms.
;;
;; ***************************************************************************
import System
import System.Collections.Generic
import System.ComponentModel
import System.Data
import System.Drawing
import System.Windows.Forms

namespace ISAMUtils

	public partial class FconvertInput extends System.Windows.Forms.UserControl implements Ioptionspage
		
		public method FconvertInput
			endparams
		proc
			this.InitializeComponent()
		endmethod
		
;;;***********************************************************************************
;;; Button Clicks
;;; calls generalRoutines to handle folder and file browse button clicks
;;;***********************************************************************************		
		private method btnFconvertInputFileTypeIsam_Click, void
			byval sender, @System.Object
			byval e, @System.EventArgs
			endparams
		proc
			generalRoutines.fileBrowseBtn(tboxFconvertInput,3)
		endmethod

;;;***********************************************************************************
;;; CheckBox CheckedChanged - Clear Panel
;;; when the checkBox is either checked or unchecked, these routines will fire and
;;; clear out the data in the fields associated with that checkBox
;;;***********************************************************************************
		private method cboxFconvertInputFileLockingEnable_CheckedChanged, void
			byval sender, @System.Object
			byval e, @System.EventArgs
			endparams
		proc
			generalRoutines.clearPanel(panFconvertInputFileLockingEnable, cboxFconvertInputFileLockingEnable)
			panFconvertInputFileLockingEnable.Focus()
		endmethod
		

		private method cboxFconvertInputFileOptionsR_CheckedChanged, void
			byval sender, @System.Object
			byval e, @System.EventArgs
			endparams
		proc
			generalRoutines.clearPanel(panFconvertInputFileOptionsR, cboxFconvertInputFileOptionsR)
			tboxFconvertInputFileOptionsR.Focus()
		endmethod


		private method cboxFconvertInputFilesOptionsK_CheckedChanged, void
			byval sender, @System.Object
			byval e, @System.EventArgs
			endparams
		proc
			generalRoutines.clearPanel(panFconvertInputFilesOptionsK, cboxFconvertInputFilesOptionsK)
			tboxFconvertInputFilesOptionsK.Focus()
		endmethod
		
;;;***********************************************************************************
;;; ComboBox selection changes 
;;;	sets the tag value for the combo boxes based on what the SelectedItemIndex is
;;;***********************************************************************************
		private method comboxFconvertInputFileType_SelectedIndexChanged, void
			byval sender, @System.Object
			byval e, @System.EventArgs
			endparams

			record
				index	,a1
				elem	,@string
			endrecord
		proc
			try
			begin
			index = comboxFconvertInputFileType.SelectedIndex
			using index select
			('1'),
			begin
				elem = "-ii"
				comboxFconvertInputFileType.Tag = elem
			end
			('2'),
			begin
				elem = "-ir"
				comboxFconvertInputFileType.Tag = elem
			end
			('3'),
			begin
				elem = "-ic"
				comboxFconvertInputFileType.Tag = elem
			end
			('4'),
			begin
				elem = "-it"
				comboxFconvertInputFileType.Tag = elem
			end
			('5'),
			begin
				elem = "-i1"
				comboxFconvertInputFileType.Tag = elem
			end
			('6'),
			begin
				elem = "-i2"
				comboxFconvertInputFileType.Tag = elem
			end
			(),
			begin
				clear elem
				comboxFconvertInputFileType.Tag = elem
				end
				endusing

			end
			catch(synerr)
			begin
				generalRoutines.catch_code(synerr.ToString(),synerr.source.ToString())
			end
			endtry
		endmethod
		
;;;***********************************************************************************
;;; Leave methods to verify required fields have data when it's associated
;;; checkbox has been selected - dlk
;;;***********************************************************************************		
		private method panFconvertInputFileLockingEnable_Leave, void
			byval sender, @System.Object
			byval e, @System.EventArgs
			endparams
		proc
			generalRoutines.validatefield("the 'Enable locking'", cboxFconvertInputFileLockingEnable, panFconvertInputFileLockingEnable)
		endmethod
		

		private method tboxFconvertInputFileOptionsR_Leave, void
			byval sender, @System.Object
			byval e, @System.EventArgs
			endparams
		proc
			generalRoutines.validatefield("the 'Input record size'", cboxFconvertInputFileOptionsR, tboxFconvertInputFileOptionsR)
		endmethod


		private method tboxFconvertInputFilesOptionsK_Leave, void
			byval sender, @System.Object
			byval e, @System.EventArgs
			endparams
		proc
			generalRoutines.validatefield("the 'Key of reference'",cboxFconvertInputFilesOptionsK, tboxFconvertInputFilesOptionsK)
		endmethod

;;;***********************************************************************************
;;; Numeric Only
;;; checks each keystroke to verify that what is being entered is numeric only
;;;***********************************************************************************
		private method tboxFconvertInputFileOptions_KeyPress, void
			byval sender, @System.Object
			byval e, @System.Windows.Forms.KeyPressEventArgs
			endparams
		proc
			try
			begin
				data rtn		,boolean
				rtn = generalRoutines.numericOnly(e.KeyChar.ToString())
				if !rtn
				begin
					e.KeyChar = ""
				end
				
			end
			catch(synerr)
			begin
				generalRoutines.catch_code(synerr.ToString(),synerr.source.ToString())
			end
			endtry
		endmethod

;;;***********************************************************************************
;;; properties for Ioptionspage interface -- SCL
;;;***********************************************************************************
		public property Options, @List<string>
			method get
			proc
				mreturn generalRoutines.bldCmdLine(this)
			endmethod
		endproperty
	endclass
endnamespace