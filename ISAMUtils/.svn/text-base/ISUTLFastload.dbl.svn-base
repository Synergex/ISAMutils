;; ***************************************************************************
;;
;;  Title:      ISUTLFastload.dbl
;;
;;  Type:       UserControl
;;
;;  Description: UserControl to be inserted into Fastload Tab
;;
;;  Author:    Jerry Fawcett , Synergy/DE Developer Support
;;
;;  Copyright:  ©Synergex International Inc.  All rights reserved.
;;
;;  WARNING:    If you were given this code by a Synergex employee then you may
;;              use and modify it freely to generate code for your applications.
;;              However, you may not under any circumstances distribute this
;;              code, or any modified version of this code, to any third party
;;              without first obtaining written permission to do so from
;;              Synergex.  In using this code you accept that it is provided
;;              as is, and without support or warranty.  Neither Synergex or the
;;              author accept any responsibility for any losses or damages of
;;              any nature which may arise from the use of this code.  This
;;              header information must remain, unaltered in the code at all
;;              times.  Possession of this code, or any modified version of this
;;              code, indicates your acceptance of these terms.
;;
;; ***************************************************************************
import System
import System.Collections.Generic
import System.ComponentModel
import System.Data
import System.Drawing
import System.Windows.Forms
import System.IO
import System.Text
import System.Diagnostics

namespace ISAMUtils

	public partial class ISUTLFastload extends System.Windows.Forms.UserControl implements Ioptionspage

		ISUTLFastloadoptions	,string
		
		public method ISUTLFastload
			endparams
		proc
			try
			begin
				this.InitializeComponent()
				comboxISUTLFastloadMessageLevel.SelectedIndex = 0
			end

			catch(synerr)
			begin
				generalRoutines.catch_code(synerr.ToString(),synerr.source.ToString())
			end
			endtry
			mreturn
		endmethod

;;;***********************************************************************************
;;; Button Clicks
;;; calls generalRoutines to handle folder and file browse button clicks
;;;***********************************************************************************	
		private method btnISUTLFastloadBrowseISAM_Click, void
			byval sender, @System.Object
			byval e, @System.EventArgs
			endparams
		proc
			generalRoutines.fileBrowseBtn(this.tboxISUTLFastloadBrowseISAM,1)
			mreturn
		endmethod


		private method btnISUTLFastloadBrowseSeq_Click, void
			byval sender, @System.Object
			byval e, @System.EventArgs
			endparams
		proc
			generalRoutines.fileBrowseBtn(tboxISUTLFastloadBrowseSeq,3)
			mreturn
		endmethod

;;;***********************************************************************************
;;; CheckBox CheckedChanged - Clear Panel
;;; when the checkBox is either checked or unchecked, these routines will fire and
;;; clear out the data in the fields associated with that checkBox
;;;***********************************************************************************
		private method tboxISUTLFastloadBrowseISAM_TextChanged, void
			byval sender, @System.Object
			byval e, @System.EventArgs
			endparams
		proc
			try
			begin
				if tboxISUTLFastloadBrowseISAM.Text 
				begin
					generalRoutines.ISAMCommandString.Append(tboxISUTLFastloadBrowseISAM.Text)
				end
			end

			catch(synerr)
			begin
				generalRoutines.catch_code(synerr.ToString(),synerr.source.ToString())
			end
			endtry
			mreturn
		endmethod

;;;***********************************************************************************
;;; Leave methods for required fields
;;; validates if a required field has data in it or not
;;;***********************************************************************************		
		private method comboxISUTLFastloadMessageLevel_SelectedIndexChanged, void
			byval sender, @System.Object
			byval e, @System.EventArgs
			endparams

			record
				index	,a1
				elem	,@string
			endrecord
		proc
			try
			begin
				index = comboxISUTLFastloadMessageLevel.SelectedIndex
				using index select
				('1'),
				begin
					elem = " -m0 "
					comboxISUTLFastloadMessageLevel.Tag = elem
				end
				('2'),
				begin
					elem = " -m1 "
					comboxISUTLFastloadMessageLevel.Tag = elem
				end
				('3'),
				begin
					elem = " -m2 "
					comboxISUTLFastloadMessageLevel.Tag = elem
				end
				(),
				begin
					clear elem
					comboxISUTLFastloadMessageLevel.Tag = elem
				end
				endusing
			end

			catch(synerr)
			begin
				generalRoutines.catch_code(synerr.ToString(),synerr.source.ToString())
			end
			endtry			
		endmethod

;;;***********************************************************************************
;;; Numeric Only
;;; checks each keystroke to verify that what is being entered is numeric only
;;;***********************************************************************************
		private method tboxISUTLFastloadPackIndex_KeyPress, void
			byval sender, @System.Object
			byval e, @System.Windows.Forms.KeyPressEventArgs
			endparams
		proc
			try
			begin
				data rtn		,boolean
				rtn = generalRoutines.numericOnly(e.KeyChar.ToString())
				if !rtn
				begin
					e.KeyChar = ""
				end
			end
			
			catch(synerr)
			begin
				generalRoutines.catch_code(synerr.ToString(),synerr.source.ToString())
			end
			endtry
			mreturn
		endmethod

;;;***********************************************************************************
;;; properties for Ioptionspage interface -- SCL
;;;***********************************************************************************
		public property Options, @List<string>
			method get
			proc
				mreturn generalRoutines.bldCmdLine(this)
			endmethod
		endproperty
	endclass
endnamespace